<!doctype html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <meta http-equiv='cache-control' content='no-cache'>
    <meta http-equiv='expires' content='0'>
    <meta http-equiv='pragma' content='no-cache'>
    <title>
        <%- title %>
    </title>
    <link id="favicon" rel="shortcut icon" href="../../images/favicon.ico" />
    <link rel="stylesheet" href="../../javascripts/semanticUI/semantic.min.css">
    <link href="../../stylesheets/mTab-style.css" type="text/css" rel="stylesheet" />
    <script src="../../javascripts/bower_components/jquery/dist/jquery.min.js"></script>
    <script src="../../javascripts/semanticUI/semantic.min.js"></script>
    <script src="../../javascripts/jquery-mTab-min.js"></script>
    <script src="../../javascripts/bootstrap-treeview.min.js"></script>
    <script src="../../javascripts/lodash.js"></script>
    <script src="../../javascripts/d3sparql/d3sparql.js"></script>
</head>

<body>
    <div class="ui  inverted segment">
        <div class="ui huge inverted secondary menu">
            <div class="item">
                <img src="/images/logo2.png">
            </div>
            <a href="/" class="item">
                Home
            </a>
            <a class="item">
                Ontologies
            </a>
            <a href="./search" class="item ">
                Search
            </a>
            <div class="right menu">
                <a class="item"> <i class="teal user icon"></i> Login</a>
                <a class="item"><i class="teal  user outline icon"></i>
                    <button class="ui inverted teal button">Sign Up</button>
                </a>
            </div>
        </div>
    </div>
    </div>
    <div>
        <h2 class="ui center aligned icon header">
            <i class="teal circular users icon"></i>
            Welcome to Vocol Service
        </h2>
    </div>
    <div class="ui container">
        <div class="ui two column grid" style="margin-bottom: 80px;">
            <div class="column">
                <h3 class="ui header" style="background-color:rgba(243, 238, 238, 0.87)">
                    <i class="blue chart bar icon"></i>
                    <div class="content">
                        Statistics
                    </div>
                </h3>
                <table class="ui blue  table" id="response">
                </table>
                <div class="ui card">
                    <div class="content">
                        <div class="header"> <i class=" teal large tags icon"></i> Search for a class</div>
                    </div>
                    <div class="content">
                        <div class="ui large feed">
                            <div id="searchConcept" class="ui fluid aligned search">
                                <div class="ui icon input">
                                    <input class="prompt" type="text" placeholder="Search classes..." style="width: 520px">
                                    <i class="search icon"></i>
                                </div>
                            </div>
                        </div>
                        <div class="extra content">
                            <a href="#">Advaced Search</a>
                        </div>
                    </div>
                    <div class="ui big divided list">
                    </div>
                </div>
            </div>
            <div class="column">
                <h3 class="ui header" style="rgba(243, 238, 238, 0.87)">
                    <i class="pink clipboard outline  icon"></i>
                    <div class="content">
                        VoCol Metadata
                    </div>
                </h3>
                <table class="ui  pink table" id="metaData">
                </table>
                <div class="ui card">
                    <div class="content">

                        <div class="header"> <i class=" teal large tags icon"></i> Find an ontology</div>
                    </div>
                    <div class="content">
                        <div class="ui large feed">
                            <div id="searchOntology" class="ui fluid search">
                                <div class="ui icon input">
                                    <input class="prompt" type="text" placeholder="Find an ontology..." style="width: 520px">
                                    <i class="search icon"></i>
                                </div>
                                <div class="results"></div>
                            </div>
                        </div>
                        <div class="extra content">
                            <a href="#" onclick="takeMeToTheOntology()">Browse the selected ontology</a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="ui bottom fixed inverted  menu">
            <a class="item">
                Data Protection
            </a>
            <a class="item">
                Imprint
            </a>
            <div class="middle menu">
                <a href="https://vocol.iais.fraunhofer.de/" class="item">&copy; 2019 vocol.iais.fraunhofer.de</a>
            </div>

            <div class=" big right menu">
                <div class="item">
                    <a href="https://github.com/vocol/vocol"> <i class="teal github icon"></i></a>
                </div>
            </div>
        </div>
        <div id="coverScreen" class="LockOn" style=" display: none;">
        </div>
</body>
</html>
<style>
    .ui.menu .item>img:not(.ui) {
        width: 3.5em;
    }

    .ui.menu {
        font-size: 1.2rem;
    }

    i.icon,
    i.icons {
        font-size: 2em;
    }

    .ui.card,
    .ui.cards>.card {
        width: auto;
        margin-top: 40px;
    }
</style>
<script>
    var limitQueryValue = 20;
    var Statistics = "";
    var selectedOntology = "";
    var graphListsWithBranches = [];

    // string to hold table content
    Statistics += '<tr><td class="td_content"> Classes</td><td class="right aligned">' +
        "1000" + '</td></tr>';
    Statistics += '<tr><td class="td_content"> RDF Properties </td><td class="right aligned">' +
        "80" +
        '</td></tr>';
    Statistics += '<tr><td class="td_content"> OWL ObjectProperties	 </td><td class="right aligned">' +
        "66" +
        '</td></tr>';
    Statistics += '<tr><td class="td_content"> OWL DatatypeProperties	 </td><td class="right aligned">' +
        "5" + '</td></tr>'
    Statistics += '<tr><td class="td_content"> OWL AnnotationProperties	 </td><td class="right aligned">' +
        "55" + '</td></tr>'
    Statistics += '<tr><td class="td_content"> Individuals	 </td><td class="right aligned">' +
        "12" + '</td></tr>';

    // string to hold table content
    var Metadata = "";
    Metadata += '<tr><td class="td_content"> Ontologies</td><td class="right aligned">' +
        "5" + '</td></tr>';
    Metadata += '<tr><td class="td_content"> List of Ontologies </td><td class="right aligned">' +
        "ins1, ins2, ins3, sto" +
        '</td></tr>';;
    $("#response").append(Metadata);
    $("#metaData").append(Statistics);

    $("#coverScreen").show();


    // // query to find all the named graphs in SPARQL-endpoint
    var allNamedGraphsQuery = 'SELECT DISTINCT ?g ' +
        'WHERE {' +
        '  GRAPH ?g { ?s ?p ?o }' +
        '}';
    var url = "http://localhost:3030/dataset/sparql"
    var endpoint = url + "?query="
    $.ajax({
        type: 'GET',
        url: endpoint + allNamedGraphsQuery,
        headers: {
            Accept: 'application/sparql-results+json;charset=UTF-8'
        },
        success: function (data, response, jqXHR) {
            // Show the HTML for the Google homepage.
            if (data != null) {
                var graphs = data.results.bindings;
                var graphLists = [];
                if (graphs[0] != null) {
                    for (var i = 0; i < graphs.length; i++) {
                        if (graphs[i]["g"].value) {
                            var stingIncludesInstace = graphs[i]["g"].value.split("dataset/")[1];
                            var instanceName = stingIncludesInstace.split('/')[0];
                            var stingIncludesBranch = graphs[i]["g"].value.split(instanceName + "/")[
                                1];
                            var branchName = stingIncludesBranch.split('/')[0];
                            graphLists.push({
                                "title": instanceName
                            });
                            graphListsWithBranches.push({
                                "instance": instanceName,
                                "branch": branchName

                            });
                        }

                    }
                    graphLists = Array.from(new Set(graphLists.map(JSON.stringify))).map(JSON.parse);
                    graphListsWithBranches = Array.from(new Set(graphListsWithBranches.map(JSON.stringify)))
                        .map(JSON.parse);

                    $('#searchOntology')
                        .search({
                            source: graphLists
                        });
                    $("#coverScreen").hide();
                }
            } else {
                // console.log(response)

                $('#searchOntology')
                        .search({
                            source: []
                        });
                console.warn(response);
            }
        }
    });

    // looking for an ontology 
    $("#searchOntology").on("click", function () {
        selectedOntology = getValue();
        console.log(selectedOntology);
    });

    // looking for a concept 
    $("#searchConcept").on('keyup', function () {
        if ($('#searchConcept').search('get value').length > 2) {
            $.ajax({
                type: 'GET',
                url: endpoint + encodeURIComponent(searchedConcepts($('#searchConcept').search(
                    'get value'))),
                headers: {
                    Accept: 'application/sparql-results+json;charset=UTF-8'
                },
                success: function (data, response, jqXHR) {
                    // Show the HTML for the Google homepage.
                    if (data != null) {
                        var concepts = data.results.bindings;
                        var conceptLists = [];
                        var conceptListDetails = [];
                        if (concepts[0] != null) {
                            for (var i = 0; i < concepts.length; i++) {
                                if (concepts[i]["g"].value)
                                    conceptLists.push({
                                        "title": concepts[i]["name"].value
                                    });
                                conceptListDetails.push({
                                    "name": concepts[i]["name"].value,
                                    "graph": concepts[i]["g"].value,
                                    "uri": concepts[i]["s"].value,
                                });

                            }
                            var listItems = function () {
                                var string = "";
                                conceptListDetails.forEach(element => {
                                    let stingIncludesInstace = element.graph.split(
                                        "dataset/")[1];
                                    let instanceName = stingIncludesInstace.split('/')[
                                        0];
                                    let stingIncludesBranch = element.graph.split(
                                        instanceName + "/")[
                                        1];
                                    let branchName = stingIncludesBranch.split('/')[0];

                                    string +=
                                        // '<div class="item"><div class=" content"><i class="small blue  tint icon"></i><a href="' +
                                        // document.URL+'/'+instanceName+'/'+branchName+'/'+element.name +'">' + element.name +
                                        // '</a></div></div>'
                                        '<div class="item"><div class=" content"><i class="small blue  tint icon"></i><a href="#" onclick="searchToGo(event);return false;">' +
                                        element.name +
                                        '</a></div></div>'
                                });
                                return string;
                            }
                            $('.divided.list').html("");
                            $('.divided.list').append(listItems);
                        }
                    } else {
                        console.warn(response);
                    }
                }
            });
        } else {
            $('.divided.list').html("");
        }

    });


    function getValue() {
        return ($('#searchOntology').search('get value'));
    }

    function takeMeToTheOntology() {
        if (selectedOntology) {
            console.log(JSON.stringify(graphListsWithBranches));
            var availableBranch = '';
            // iterate over each element in the array
            for (var i = 0; i < graphListsWithBranches.length; i++) {
                // look for the entry with a matching `code` value
                if (graphListsWithBranches[i].instance == selectedOntology) {
                    availableBranch = graphListsWithBranches[i].branch;
                    break;
                }
            }
            window.location.href = document.URL.split('#')[0] + 'documentation/' + selectedOntology + '/' +
                availableBranch;
        }
    }

    //test function
    function searchToGo(e) {
        if (e.target.innerHTML)
            window.location.href = "/search?" + e.target.innerHTML;
        e.preventDefault();

    }



    // query to get searchedConcepts
    var searchedConcepts = function (searchedString) {
        return ("PREFIX owl: <http://www.w3.org/2002/07/owl#> " +
            " PREFIX  afn:  <http://jena.apache.org/ARQ/function#> " +
            " PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> " +
            " PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>" +
            " SELECT DISTINCT ?s ?g ?name	 " +
            "  WHERE { GRAPH ?g { { ?s a owl:Class.} " +
            "  union {?s a rdfs:Class.} union {?s a owl:DatatypeProperty.} " +
            "  union {?s a owl:ObjectProperty.}    union {?s a owl:AnnotationProperty.} " +
            "  union {?s a owl:FunctionalProperty.} union {?s a rdf:Property.} " +
            "  union {?s a owl:SymmetricProperty.} union {?s a owl:TransitiveProperty.} " +
            "   union {?s a owl:InverseFunctionalProperty .} " +
            " filter(!isBlank(?s)) " +
            " filter(contains(afn:localname(?s),\"" + searchedString + "\")) " +
            "  bind(afn:localname(?s)	 as ?name)} }" +
            " order by (?name) limit " + limitQueryValue
        )
    }
</script>